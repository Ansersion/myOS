


ARM Macro Assembler    Page 1 


    1 00000000                 IMPORT           OSTCBCur
    2 00000000                 IMPORT           OSTCBNext
    3 00000000         
    4 00000000                 EXPORT           OS_ENTER_CRITICAL
    5 00000000                 EXPORT           OS_EXIT_CRITICAL
    6 00000000                 EXPORT           OSStart
    7 00000000                 EXPORT           PendSV_Handler
    8 00000000                 EXPORT           OSCtxSw
    9 00000000         
   10 00000000 E000ED04 
                       NVIC_INT_CTRL
                               EQU              0xE000ED04  ;Address of NVIC In
                                                            terruptions Control
                                                             Register
   11 00000000 10000000 
                       NVIC_PENDSVSET
                               EQU              0x10000000  ;Enable PendSV
   12 00000000 E000ED22 
                       NVIC_SYSPRI14
                               EQU              0xE000ED22  ; System priority r
                                                            egister (priority 1
                                                            4).
   13 00000000 000000FF 
                       NVIC_PENDSV_PRI
                               EQU              0xFF        ; PendSV priority v
                                                            alue (lowest).
   14 00000000         
   15 00000000                 PRESERVE8
   16 00000000         
   17 00000000                 AREA             |.text|, CODE, READONLY
   18 00000000                 THUMB
   19 00000000         
   20 00000000         ;/******************OS_ENTER_CRITICAL************/
   21 00000000         OS_ENTER_CRITICAL
   22 00000000 B672            CPSID            I           ; Enable interrupti
                                                            ons
   23 00000002 4770            BX               LR          ; Return
   24 00000004         
   25 00000004         ;/******************OS_EXIT_CRITICAL************/
   26 00000004         OS_EXIT_CRITICAL
   27 00000004 B662            CPSIE            I           ; Disable interrupt
                                                            ions
   28 00000006 4770            BX               LR          ; Return
   29 00000008         
   30 00000008         ;/******************OSStart************/
   31 00000008         OSStart
   32 00000008         ; disable interruptions
   33 00000008 B672            CPSID            I
   34 0000000A         ; initialize PendSV
   35 0000000A 4823            LDR              R0, =NVIC_SYSPRI14 ; Set the Pe
                                                            ndSV exception prio
                                                            rity
   36 0000000C F04F 01FF       LDR              R1, =NVIC_PENDSV_PRI
   37 00000010 7001            STRB             R1, [R0]
   38 00000012         
   39 00000012         ; initialize PSP as 0
   40 00000012 F04F 0400       MOV              R4, #0
   41 00000016 F384 8809       MSR              PSP, R4
   42 0000001A         



ARM Macro Assembler    Page 2 


   43 0000001A         ; trigger PendSV
   44 0000001A 4C20            LDR              R4, =NVIC_INT_CTRL
   45 0000001C F04F 5580       LDR              R5, =NVIC_PENDSVSET
   46 00000020 6025            STR              R5, [R4]
   47 00000022         
   48 00000022         ; enable interruptions
   49 00000022 B662            CPSIE            I
   50 00000024         
   51 00000024         ; should never get here
   52 00000024         OSStartHang
   53 00000024 E7FE            B                OSStartHang
   54 00000026         
   55 00000026         ;/******************PendSV_Handler************/
   56 00000026         PendSV_Handler
   57 00000026 B672            CPSID            I
   58 00000028         ; judge if using PSP
   59 00000028 F3EF 8009       MRS              R0, PSP
   60 0000002C B130            CBZ              R0, PendSV_Handler_NoSave
   61 0000002E         
   62 0000002E         ; judge PSR, PC, LR, R12
   63 0000002E         ;  R12, R3, R2, R1
   64 0000002E         ;SUB  R0, R0, #0x20
   65 0000002E         ;
   66 0000002E         ;; store R11 
   67 0000002E         ;STR  R11, [R0]
   68 0000002E         ;SUB  R0, R0, #0x4
   69 0000002E         ;; store R10 
   70 0000002E         ;STR  R10, [R0]
   71 0000002E         ;SUB  R0, R0, #0x4
   72 0000002E         ;; store R9
   73 0000002E         ;STR  R9, [R0]
   74 0000002E         ;SUB  R0, R0, #0x4
   75 0000002E         ;; store R8 
   76 0000002E         ;STR  R8 , [R0]
   77 0000002E         ;SUB  R0, R0, #0x4
   78 0000002E         ;; store R7 
   79 0000002E         ;STR  R7 , [R0]
   80 0000002E         ;SUB  R0, R0, #0x4
   81 0000002E         ;; store R6 
   82 0000002E         ;STR  R6 , [R0]
   83 0000002E         ;SUB  R0, R0, #0x4
   84 0000002E         ;; store R5 
   85 0000002E         ;STR  R5 , [R0]
   86 0000002E         ;SUB  R0, R0, #0x4
   87 0000002E         ;; store R4 
   88 0000002E         ;STR  R4 , [R0]
   89 0000002E         ;SUB  R0, R0, #0x4
   90 0000002E         ;ADD  R0, R0, #0x20
   91 0000002E F1A0 0020       SUB              R0, R0, #0x20
   92 00000032 E880 0FF0       STM              R0, {R4-R11}
   93 00000036         
   94 00000036 491A            LDR              R1, =OSTCBCur
   95 00000038 6809            LDR              R1, [R1]
   96 0000003A 6008            STR              R0, [R1]
   97 0000003C         
   98 0000003C         PendSV_Handler_NoSave
   99 0000003C         ; OSTCBCur->OSTCBStkPtr = OSTCBNext->OSTCBStkPtr;
  100 0000003C 4818            LDR              R0, =OSTCBCur
  101 0000003E 4919            LDR              R1, =OSTCBNext



ARM Macro Assembler    Page 3 


  102 00000040 680A            LDR              R2, [R1]
  103 00000042 6002            STR              R2, [R0]
  104 00000044         
  105 00000044 6810            LDR              R0, [R2]
  106 00000046         ; LDM  R0, {R4-R11}
  107 00000046         ; load R4 
  108 00000046 6804            LDR              R4, [R0]
  109 00000048 F100 0004       ADD              R0, R0, #0x4
  110 0000004C         ; load R5 
  111 0000004C 6805            LDR              R5, [R0]
  112 0000004E F100 0004       ADD              R0, R0, #0x4
  113 00000052         ; load R6
  114 00000052 6806            LDR              R6, [R0]
  115 00000054 F100 0004       ADD              R0, R0, #0x4
  116 00000058         ; load R7 
  117 00000058 6807            LDR              R7 , [R0]
  118 0000005A F100 0004       ADD              R0, R0, #0x4
  119 0000005E         ; load R8 
  120 0000005E F8D0 8000       LDR              R8 , [R0]
  121 00000062 F100 0004       ADD              R0, R0, #0x4
  122 00000066         ; load R9 
  123 00000066 F8D0 9000       LDR              R9 , [R0]
  124 0000006A F100 0004       ADD              R0, R0, #0x4
  125 0000006E         ; load R10 
  126 0000006E F8D0 A000       LDR              R10 , [R0]
  127 00000072 F100 0004       ADD              R0, R0, #0x4
  128 00000076         ; load R11 
  129 00000076 F8D0 B000       LDR              R11 , [R0]
  130 0000007A F100 0004       ADD              R0, R0, #0x4
  131 0000007E         
  132 0000007E F380 8809       MSR              PSP, R0
  133 00000082 F04E 0E04       ORR              LR, LR, #0x04
  134 00000086 B662            CPSIE            I
  135 00000088 4770            BX               LR
  136 0000008A         
  137 0000008A         OSCtxSw
  138 0000008A B430            PUSH             {R4, R5}
  139 0000008C 4C03            LDR              R4, =NVIC_INT_CTRL
  140 0000008E F04F 5580       LDR              R5, =NVIC_PENDSVSET
  141 00000092 6025            STR              R5, [R4]
  142 00000094 BC30            POP              {R4, R5}
  143 00000096 4770            BX               LR
  144 00000098         
  145 00000098                 align            4
  146 00000098                 end
              E000ED22 
              E000ED04 
              00000000 
              00000000 
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=.\obj\os
_cpu_a.d -o.\obj\os_cpu_a.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\PACK\ARM
\CMSIS\3.20.4\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.4\Devi
ce\Include --list=.\obj\os_cpu_a.lst os_cpu_a.asm



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 17 in file os_cpu_a.asm
   Uses
      None
Comment: .text unused
OSCtxSw 0000008A

Symbol: OSCtxSw
   Definitions
      At line 137 in file os_cpu_a.asm
   Uses
      At line 8 in file os_cpu_a.asm
Comment: OSCtxSw used once
OSStart 00000008

Symbol: OSStart
   Definitions
      At line 31 in file os_cpu_a.asm
   Uses
      At line 6 in file os_cpu_a.asm
Comment: OSStart used once
OSStartHang 00000024

Symbol: OSStartHang
   Definitions
      At line 52 in file os_cpu_a.asm
   Uses
      At line 53 in file os_cpu_a.asm
Comment: OSStartHang used once
OS_ENTER_CRITICAL 00000000

Symbol: OS_ENTER_CRITICAL
   Definitions
      At line 21 in file os_cpu_a.asm
   Uses
      At line 4 in file os_cpu_a.asm
Comment: OS_ENTER_CRITICAL used once
OS_EXIT_CRITICAL 00000004

Symbol: OS_EXIT_CRITICAL
   Definitions
      At line 26 in file os_cpu_a.asm
   Uses
      At line 5 in file os_cpu_a.asm
Comment: OS_EXIT_CRITICAL used once
PendSV_Handler 00000026

Symbol: PendSV_Handler
   Definitions
      At line 56 in file os_cpu_a.asm
   Uses
      At line 7 in file os_cpu_a.asm
Comment: PendSV_Handler used once
PendSV_Handler_NoSave 0000003C

Symbol: PendSV_Handler_NoSave



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 98 in file os_cpu_a.asm
   Uses
      At line 60 in file os_cpu_a.asm
Comment: PendSV_Handler_NoSave used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NVIC_INT_CTRL E000ED04

Symbol: NVIC_INT_CTRL
   Definitions
      At line 10 in file os_cpu_a.asm
   Uses
      At line 44 in file os_cpu_a.asm
      At line 139 in file os_cpu_a.asm

NVIC_PENDSVSET 10000000

Symbol: NVIC_PENDSVSET
   Definitions
      At line 11 in file os_cpu_a.asm
   Uses
      At line 45 in file os_cpu_a.asm
      At line 140 in file os_cpu_a.asm

NVIC_PENDSV_PRI 000000FF

Symbol: NVIC_PENDSV_PRI
   Definitions
      At line 13 in file os_cpu_a.asm
   Uses
      At line 36 in file os_cpu_a.asm
Comment: NVIC_PENDSV_PRI used once
NVIC_SYSPRI14 E000ED22

Symbol: NVIC_SYSPRI14
   Definitions
      At line 12 in file os_cpu_a.asm
   Uses
      At line 35 in file os_cpu_a.asm
Comment: NVIC_SYSPRI14 used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

OSTCBCur 00000000

Symbol: OSTCBCur
   Definitions
      At line 1 in file os_cpu_a.asm
   Uses
      At line 94 in file os_cpu_a.asm
      At line 100 in file os_cpu_a.asm

OSTCBNext 00000000

Symbol: OSTCBNext
   Definitions
      At line 2 in file os_cpu_a.asm
   Uses
      At line 101 in file os_cpu_a.asm
Comment: OSTCBNext used once
2 symbols
346 symbols in table
